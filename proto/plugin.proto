syntax = "proto3";

package plugin;

option go_package = "github.com/example/grpc-plugin-app/proto";

// Plugin service definition
service Plugin {
  // GetInfo returns plugin metadata and capabilities
  rpc GetInfo(InfoRequest) returns (PluginInfo) {}
  
  // Execute runs the plugin with the given parameters and streams output
  rpc Execute(ExecuteRequest) returns (stream ExecuteOutput) {}
  
  // ReportExecutionSummary sends execution summary data
  rpc ReportExecutionSummary(SummaryRequest) returns (SummaryResponse) {}
}

// InfoRequest is empty for now but may contain fields in the future
message InfoRequest {}

// PluginInfo contains metadata about the plugin
message PluginInfo {
  string name = 1;
  string version = 2;
  string description = 3;
  map<string, ParamSpec> parameter_specs = 5;
  Authorization auth = 6;
}

// ParamSpec describes a plugin parameter
message ParamSpec {
  string name = 1;
  string description = 2;
  bool required = 3;
  string default_value = 4;
  string type = 5;  // "string", "int", "float", etc.
  repeated string allowed_values = 6;  // if empty, any value is allowed
}

// ExecuteRequest contains the parameters for plugin execution
message ExecuteRequest {
  map<string, string> params = 1;
}

// ExecuteOutput represents a single output message from the execution
message ExecuteOutput {
  oneof content {
    string output = 1;     // Regular output message
    Error error = 2;       // Error if execution fails
    Progress progress = 3; // Progress information
  }
}

// Error represents an execution error
message Error {
  string message = 1;
  string code = 2;        // Error code for programmatic handling
  string details = 3;     // Additional error details
}

// Progress represents execution progress
message Progress {
  float percent_complete = 1;
  string stage = 2;
  int32 current_step = 3;
  int32 total_steps = 4;
}

// SummaryRequest contains execution summary data
message SummaryRequest {
  string plugin_name = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  bool success = 4;
  string error = 5;
  map<string, string> metadata = 6;
  map<string, double> metrics = 7;
}

// SummaryResponse contains the execution summary data
message SummaryResponse {
  string plugin_name = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  double duration = 4;  // in milliseconds
  bool success = 5;
  string error = 6;
  map<string, string> metadata = 7;
  map<string, double> metrics = 8;
}

message Authorization {
  // Source of authorization, e.g., "AD Group", "Repo", "Gitlab User"
  string source = 1;
  // Allowed values for the source
  repeated string values = 2;
} 